<import name="personalCenter" src="./personalCenter.ux"></import>
<import name="home" src="./home.ux"></import>
<import name="classify" src="./classify.ux"></import>
<import name="shoppingCar" src="./shoppingCar.ux"></import>

<template>
  <div class="page-container">
    <tabs onchange="changeTab" index="{{activeTab}}">
      <tab-content>
        <div class="content-container">
          <div if="{{this.selectedTab === 'Home'}}">
            <home></home>
          </div>
          <div if="{{this.selectedTab ==='Categories'}}">
            <classify></classify>
          </div>
          <div if="{{this.selectedTab === 'Cart'}}">
            <shoppingCar is-full="{{isFull}}"></shoppingCar>
          </div>
          <div if="{{this.selectedTab === 'Personal'}}">
            <personalCenter></personalCenter>
          </div>
        </div>
      </tab-content>

      <tab-bar class="tab-bar">
        <div class="tab-item" for="tabList">
          <text
            class="iconfont"
            style="color: {{$item.title === this.selectedTab ? this.activedColor : this.deactivedColor}}"
          >
            {{ $item.icon }}
          </text>
          <text
            class="tab-title"
            style="color: {{$item.title === this.selectedTab ? this.activedColor : this.deactivedColor}}"
          >
            {{ $item.title }}
          </text>
        </div>
      </tab-bar>
    </tabs>
  </div>
</template>

<script>
export default {
  private: {
    tabList: [
      {
        title: 'Home',
        icon: '\ue619'
      },
      {
        title: 'Categories',
        icon: '\ue600'
      },
      {
        title: 'Cart',
        icon: '\ue655'
      },
      {
        title: 'Personal',
        icon: '\ue607'
      }
    ],
    selectedTab: 'Home',
    deactivedColor: '#707780',
    activedColor: ' #20a0ff',
    activeTab: 0,
    isFull: false
  },
  onInit() {},
  /* -------------------SelfCustomEvent------------------ */
  changeTab(e) {
    this.activeTab = e.index
    let index = e.index || 0
    this.selectedTab = this.tabList[index].title
    this.$page.setTitleBar({
      text: this.selectedTab,
      menu: false
    })
  },
  onShow() {
    // When the page is switched, check whether the data transferred from page B exists in the data.
    const data = this.$app.getAppData('activeTab')
    this.isFull = !!data
    if (data) {
      this.activeTab = data
      // Clear after reading
      this.$app.setAppData('activeTab', null)
    }
  }
}
</script>

<style lang="less">
text {
  font-size: 40px;
  text-align: center;
}

@font-face {
  font-family: iconfont;
  src: url('/assets/iconfont/iconfont.ttf');
}
.iconfont {
  font-family: iconfont;
}

.page-container {
  flex-direction: column;
  .tab-bar {
    background-color: #fafafa;
    border-top-width: 1px;
    border-top-color: #f2f2f2;
    .tab-item {
      flex-direction: column;
      justify-content: center;
      .iconfont {
        font-size: 50px;
      }
      .tab-title {
        font-size: 20px;
      }
    }
  }
}
</style>
